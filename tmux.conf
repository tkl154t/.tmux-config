bind r "source-file ~/.tmux.conf; display-message \"Reload done!\""

#=============================================================================== 

#Nmap===============
run-shell -b "tmux set-buffer -b nmap 'nmap -n -Pn -sC -sV -vvv -oN nmap/nmap.log 10.10.10.10; beep -r 10'"

run-shell -b "tmux set-buffer -b nmap -a \"$(echo '\n\
nmap -n -Pn -sC -sV -vvv -oN nmap/nmapAll.log -p- 10.10.10.10; beep -r 10\
')\""

run-shell -b "tmux set-buffer -b nmap -a \"$(echo '\n\
nmap -n -Pn -sC -sV -vvv -oN nmap/nmapUDP.log -sU --top-ports 100 10.10.10.10; beep -r 10\
')\""

bind -n M-1 send-key "nmap -n -Pn -sC -sV -vvv -oN nmap/nmap.log \$ip; beep -r 10"
bind -n M-2 send-key "nmap -n -Pn -sC -sV -vvv -oN nmap/nmapAll.log -p- \$ip; beep -r 10"
bind -n M-3 send-key "nmap -n -Pn -sC -sV -vvv -oN nmap/nmapUDP.log -sU --top-ports 100 \$ip; beep -r 10"

#Gobuster============
run-shell -b "tmux set-buffer -b gobuster '\
gobuster dir -e -w /usr/share/seclists/Discovery/Web-Content/common.txt -x .php -u http://$TARGET -o gobuster/root.common.log\
'"
run-shell -b "tmux set-buffer -b gobuster -a \"$(echo '\n\
gobuster dir -e -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x .php -u http://$TARGET -o gobuster/root.list-2.3.log\
')\""
run-shell -b "tmux set-buffer -b gobuster -a \"$(echo '\n\
gobuster dir -e -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x .php -u http://$TARGET -o gobuster/root.list-2.3.log\
')\""
#===============================================================================

# FTP server
bind -n M-f send-key "python3 -m pyftpdlib -w -p 21"
# smb server
bind -n M-s send-key "impacket-smbserver -smb2support s `pwd`"
# HTTP Server
bind -n M-h send-key "python3 -m http.server 80"
### Temp
bind -n M-i send-key "192.168.119.204"

### My bind key space

# TTY
bind -n M-t send-key "python -c \"import pty; pty.spawn('/bin/bash')\""
#================================ M-l
# Tmux logging hot-key
bind -n M-l "new-window; send-key 'tmux set -g @logging-path  `pwd`/tmux-logs; exit'"



#=========================================================================================================
### Custom space
# Close window
# bind -n C-w kill-window
# Close pane
unbind -n C-x
# Split window
bind | split-window -h




# Windows status bar to top
set-option -g status-position bottom

# Auto rename window
setw -g automatic-rename on
# Mouse support
set -g mouse on
# Turn mouse support on/off
unbind m
bind m set mouse

# Tmux copy buffer to clipboard
unbind -n C-y
#bind -n C-y run-shell -b "tmux save-buffer - | xclip -selection clipboard; tmux display-message \"Tmux buffer saved to clipboard\" "
unbind C-y
bind C-y run-shell -b "tmux save-buffer - | xclip -selection clipboard; tmux display-message \"Tmux buffer saved to clipboard\" "
unbind -n C-w
bind -n C-w run-shell -b "tmux save-buffer - | xclip -selection clipboard; tmux display-message \"Tmux buffer saved to clipboard\" "

#
set -g @yank_action 'copy-pipe-no-clear'


# Tmux sidebar
set -g @plugin 'tmux-plugins/tmux-sidebar'
# Logging custom
set-hook -g after-new-session 'run -b "tmux set -g @logging-path  `pwd`/tmux-logs"'
set -g @logging-path 'tmux-logs'
set -g @logging-filename "#{session_name}-#{window_name}-#{pane_title}-%Y_%m_%d-%H-%M-%S.log"

set -g @screen-capture-path 'tmux-logs'
set -g @screen-capture-filename "#{session_name}-#{window_name}-#{pane_title}-%Y_%m_%d-%H-%M-%S-screen-capture.log"

set -g @save-complete-history-path 'tmux-logs'
set -g @save-complete-history-filename "#{session_name}-#{window_name}-#{pane_title}-%Y_%m_%d-%H-%M-%S-complete-history.log"

# Show Pane Title
set -g pane-border-status top
#set -g pane-border-format " [ ###P #T ] "
#set -g pane-border-format ""
set -g pane-border-status off


# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D


# Windows
bind-key -n C-t new-window
bind-key -n C-Left previous-window
bind-key -n C-Right next-window

# THeme
#set -g @tmux_power_theme 'moon'
#set -g @plugin 'wfxr/tmux-power'

set -g @plugin 'dracula/tmux'
set -g @dracula-show-weather false
set -g @dracula-show-network false
set -g @dracula-show-battery false  
set -g @dracula-show-powerline true
set -g @dracula-border-contrast true
set -g @dracula-show-left-icon session
set -g @dracula-show-flags true
set -g @dracula-show-powerline false


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-yank'
#tmux logging session
set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g default-command "reattach-to-user-namespace -l $SHELL"
#tmux set -g @resurrect-dir '/tmp/test/my-session'
set-hook -g after-new-session 'run -b "tmux set -g @resurrect-dir `pwd`/#{session_name}"'
set -g @resurrect-capture-pane-contents 'on'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
